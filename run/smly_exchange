#/bin/bash

# 1 receive transaction to our vendor address
# 2 extract a smly2.0 address from an op_return 
# 3 look at how much money was sent with the op_return
# 4 transfer amount found in step 3 from master account to the address in step 2
# 5 burn smly sent
# if anything goes wrong we send the smiley we received back


logfile="/home/bjarki/exchange.log"
txidfile="/home/bjarki/txids.log"
datadir="/home/bjarki/.smileycoin"
ws_dest="ws://127.0.0.1:9945"
master_seed="system also name sample repair legend december pupil merit destroy kidney elephant///mamma"

log() {
    echo "$txid_first $1" >> $logfile
}

failure() {
    log "ERROR $1"
    exit 1
}

if [ $# != 1 ]
then
    failure "we need txid as an argument"
fi


program_name="$0"
txid="$1"

if [ -z "$txid" ]
then
    failure "txid is an empty string"
fi

txid_first=`echo $txid | cut -b 1-6`

ourtxid="0eb808bba1522c60d5741cbb6a10398e0cdff23835f89f608555ff2e788db755"
our_address="BPZgtUcQaRYUCFGJYoY4c2dd6q9WWyGku2"
burn_address="BSo92LdvbLtJy1YJKsZT4HMCFmLSX9Te8Y"

log "`date`"

repeat=`grep "$txid" "$txidfile"`
if [ "$repeat" ]
then
    exit 1
fi

echo "$txid" >> $txidfile

# Step 0: Omit the coinbase transactions (dividends etc)
generated=`smileycoin-cli gettransaction "$txid" | grep generated | wc -l`
if [ "$generated" != "0" ]
then
	failure "transaction $txid_first is a coinbase transaction"
fi

# Step 1: extract some basics for the incoming transaction (the amount and encrypted address)
tx=`smileycoin-cli getrawtransaction "$txid"`

if [ -z "$tx" ]
then
	log "could not look up txid $txid"
    log "sleeping for 120 seconds"
	sleep 120
	tx=`smileycoin-cli getrawtransaction "$txid"`

	if [ -z "$tx" ]
	then
        failure "still could not look up txid $txid"
	fi
fi

log "checking whether this tx contains a some coins or not"
decodedtx=`smileycoin-cli decoderawtransaction "$tx"`

sender_txid=`echo -e "$decodedtx" | grep txid | head -2 | tail -1 | sed -e 's/",//' -e 's/.*"//'` 
sender_tx=`smileycoin-cli getrawtransaction "$sender_txid"`
sender_vout=`echo -e "$decodedtx" | grep vout | head -1 | sed -e 's/",//' -e 's/.*"//' -e 's/[ :,]*//g'`
recipient=`smileycoin-cli decoderawtransaction "$sender_tx" \
            | sed -n -e '/ *"n" *: *'"$sender_vout/,/]/p" \
            | sed -e 1d | sed '/]/,$d     ' | tail -1 | sed 's/[ ",]*//g'`

sent_amount=`echo "$decodedtx" | grep -B 8 "$our_address" | head -1 \
        | perl -pe 's|.*"value" : (\d+.\d+).*|\1|'`
log "this is the amount sent: >$sent_amount<"

if [ -z "$sent_amount" ]
then
	failure "transaction ${txid_first}... does not include any SMLY to our address"
fi


if [ `echo "$sent_amount <= 1" | bc -l` = 1 ]
then
	failure "transaction ${txid_first}... has to contain more than 1SMLY for tx fees"
fi

# Step 2: decrypt
log "trying to find magic number fa32 and SMLY2.0 address embedded in the transaction"
hexaddress=`echo $decodedtx | perl -pe 's|.*fa32(35.*?)".*|\1|'`
address=`echo "$hexaddress" | xxd -r -p`

amount_back=`echo "$sent_amount - 1" | bc`
log "amount to send back in case of failure: $amount_back"
scaled_amount=`echo "$sent_amount * 1000000000000" | bc`
final_amount=`LC_NUMERIC="en_US.UTF-8" printf "%.0f" "$scaled_amount"`

if [ -z "$address" ]
then
    smileycoin-cli sendtoaddress "$recipcient" "$amount_back"
	failure "was not able to find SMLY2.0 address to send to, sending money back minus tx fees"
fi

send_result=`polkadot-js-api --ws "$ws_dest" tx.balances.transfer "$address" "$final_amount" --seed "$master_seed"`
failed=`echo "$send_result" | grep ExtrinsicFailed`

log "$send_result"

if [ "$failed" ]
then
    smileycoin-cli sendtoaddress "$recipcient" "$amount_back"
    failure "something went wrong with transferring SMLY2.0, sending back money minus tx fees"
else
    smileycoin-cli sendtoaddress "$burn_address" "$amount_back"
    log "successfully burned ${sent_amount}SMLY and transferred the same amount to $address on the SMLY2.0 chain"
    exit 0
fi

